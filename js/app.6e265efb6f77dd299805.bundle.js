(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const o=a(89),{AxisScrollStrategies:s,AxisTickStrategies:n,AutoCursorModes:r,emptyFill:l,SolidFill:i,emptyLine:d,lightningChart:m,synchronizeAxisIntervals:c,UIOrigins:g,UIElementBuilders:u,UILayoutBuilders:h,Themes:S}=o;fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0508/medical-data.json").then((e=>e.json())).then((e=>{const{ecg:t,bloodPressure:a,bloodVolume:o,bloodOxygenation:x}=e,y=[{shortName:"ECG/EKG",name:"Electrocardiogram",dataSet:t,yStart:-1955,yEnd:1195},{shortName:"NIBP",name:"Blood pressure",dataSet:a,yStart:.475,yEnd:.795},{shortName:"BFV",name:"Blood flow volume",dataSet:o,yStart:.155,yEnd:.445},{shortName:"Sp02",name:"Blood oxygen saturation",dataSet:x,yStart:.015,yEnd:.155}],p=m({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({numberOfRows:y.length,numberOfColumns:1,theme:S[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setRowHeight(0,.4).setRowHeight(1,.3).setRowHeight(2,.2).setRowHeight(3,.2),T=p.getTheme(),w=y.map(((e,t)=>{const a=p.createChartXY({rowIndex:t,columnIndex:0}).setPadding({bottom:4,top:4,right:200,left:10}).setMouseInteractions(!1).setAutoCursorMode(r.disabled),o=a.getDefaultAxisX().setMouseInteractions(!1);return a.getDefaultAxisY().setMouseInteractions(!1).setInterval({start:e.yStart,end:e.yEnd}).setTickStrategy(n.Empty).setStrokeStyle(d),t>0?a.setTitleFillStyle(l):a.setTitle("Medical Dashboard"),t<y.length-1?o.setTickStrategy(n.Time,(e=>e.setMajorTickStyle((e=>e.setLabelFillStyle(l).setTickStyle(d).setTickLength(0).setTickPadding(0))).setMinorTickStyle((e=>e.setLabelFillStyle(l).setTickStyle(d).setTickLength(0).setTickPadding(0))))).setStrokeStyle(d).setScrollStrategy(void 0):o.setTickStrategy(n.Time).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-1e4,stopAxisAfter:!1}))).setScrollStrategy(s.progressive),a})),b=w.map(((e,t)=>{const a=e.getDefaultAxisX(),o=e.getDefaultAxisY(),s=y[t],n=e.addUIElement(h.Column,e.coordsRelative).setBackground((e=>e.setFillStyle(l).setStrokeStyle(d))).setMouseInteractions(!1).setVisible(!1);n.addElement(u.TextBox).setText(s.shortName),n.addElement(u.TextBox).setText(s.name).setTextFont((e=>e.setSize(10)));const r=n.addElement(u.TextBox).setText("").setTextFont((e=>e.setSize(10)));let i;return"Electrocardiogram"===s.name&&(n.addElement(u.TextBox).setMargin({top:10}).setText("BPM"),i=n.addElement(u.TextBox).setText("").setTextFont((e=>e.setSize(36)))),e.onResize((()=>{n.setVisible(!0).setPosition(e.translateCoordinate({x:a.getInterval().end,y:o.getInterval().end},e.coordsAxis,e.coordsRelative)).setOrigin(g.LeftTop).setMargin({left:10})})),{labelSampleRate:r,labelBpmValue:i}}));c(...w.map((e=>e.getDefaultAxisX())));const f=w.map(((e,t)=>{const a=y[t],o=e.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:Math.max(t-1,0)}).setName(a.name).setDataCleaning({minDataPointCount:1e3});return"Electrocardiogram"===a.name&&o.setStrokeStyle((e=>e.setFillStyle(new i({color:T.examples.badGoodColorPalette[T.examples.badGoodColorPalette.length-1]})))),o}));let k=window.performance.now(),I=0;const E=()=>{const e=window.performance.now(),t=f.map((e=>[]));for(;e>k;){const e=k;for(let a=0;a<f.length;a+=1){const o=y[a],s=o.dataSet,n=s[I%s.length];t[a].push({x:e,y:n}),"Electrocardiogram"===o.name&&C(n)}k+=1,I+=1}f.forEach(((e,a)=>e.add(t[a]))),R+=t[0].length,requestAnimationFrame(E)};requestAnimationFrame(E);let R=0,B=window.performance.now();setInterval((()=>{const e=window.performance.now(),t=Math.round(1e3*R/(e-B)),a=60*A*1e3/(e-M);b.forEach(((e,o)=>{e.labelSampleRate.setText(`${t} samples / second`),e.labelBpmValue&&e.labelBpmValue.setText(`${Math.round(a)}`)})),R=0,B=e}),2e3);let M=window.performance.now(),A=0;const C=(()=>{let e=0;return t=>{e<800&&t>800&&(A+=1),e=t}})()}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);